buildscript {
    repositories {
        mavenCentral()

        maven { url 'https://maven.minecraftforge.net/' }
        maven { url 'https://repo.spongepowered.org/maven/' }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.0"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'idea'

version = "1.0.0"
group = "com.paragon"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding 'UTF-8'
}

repositories {
    mavenCentral()

    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
    maven { url 'https://jitpack.io' }
}

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'com.paragon.asm.MixinLoader'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

configurations {
    libaries
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    libaries('org.spongepowered:mixin:0.8.5') {
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    annotationProcessor('org.spongepowered:mixin:0.8.5:processor') {
        exclude module: 'gson'
    }

    libaries group: 'org.json', name: 'json', version: '20220320'
    libaries group: 'com.github.Litarvan', name: 'OpenAuth', version: '1.1.2'
    libaries group: 'club.minnced', name: 'java-discord-rpc', version: '2.0.1'
    libaries group: 'com.github.therealbush', name: 'translator', version: '1.0.2'
    libaries group: 'com.github.Wolfsurge', name: 'animationsystem', version: '1.0'

    libaries group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: '1.7.0'
    libaries group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.7.0'
    libaries group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.6.2'

    implementation configurations.libaries
}

mixin {
    defaultObfuscationEnv 'searge'

    sourceSets {
        main {
            ext.refMap = 'mixins.paragon.refmap.json'
        }
    }
}

processResources {
    from(sourceSets.main.resources) {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
        include 'mcmod.info'
        expand version: version, 'mcversion': "1.12.2"
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}

task prepareAssets(type: Copy) {
    group = 'build'
    from project.file('src/main/resources')
    into project.file('build/classes/kotlin/main')
}

jar {
    manifest.attributes(
            'Manifest-Version': 1.0,
            'MixinConfigs': 'mixins.paragon.json',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'FMLCorePluginContainsFMLMod': 'true',
            'FMLCorePlugin': 'com.paragon.asm.MixinLoader',
            'ForceLoadAsMod': 'true'
    )

    from {
        configurations.libaries.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

// Kotlin plugin doesn't seem to automatically do this (at least for me)
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

classes.dependsOn(prepareAssets)