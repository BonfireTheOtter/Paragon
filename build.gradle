buildscript {
    repositories {
        maven {
			name = 'forge'
			url = 'https://maven.minecraftforge.net/'
		}

		maven {
			name = 'spongepowered'
			url = 'https://repo.spongepowered.org/repository/maven-public/'
		}
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
		classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version = "1.0.0"
group = "com.paragon"
archivesBaseName = "paragon"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
	options.encoding 'UTF-8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    mappings = "snapshot_20171003"
    coreMod = "com.paragon.asm.MixinLoader"
    makeObfSourceJar = false
}

allprojects {
	repositories {
		mavenCentral()

		maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
		maven { url 'https://jitpack.io' }
	}
}

dependencies {
    compile('org.spongepowered:mixin:0.7.4-SNAPSHOT') {
		exclude module: 'launchwrapper'
		exclude module: 'guava'
		exclude module: 'gson'
		exclude module: 'commons-io'
	}

	compile group: 'org.json', name: 'json', version: '20211205'
	compile group: 'com.github.Litarvan', name: 'OpenAuth', version: '1.1.2'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

shadowJar {
	dependencies {
		include(dependency('org.spongepowered:mixin'))
		include(dependency('com.github.Litarvan:OpenAuth'))
		include(dependency('org.json:json'))
	}
    
	exclude 'dummyThing'
	exclude 'LICENSE.txt'
	classifier = 'release'
}

mixin {
	defaultObfuscationEnv searge

	sourceSets {
		main {
			ext.refMap = "mixins.paragon.refmap.json"
		}
	}
}

reobf {
	shadowJar {
		mappingType = 'SEARGE'
		classpath = sourceSets.main.compileClasspath
	}
}

jar {
	manifest {
		attributes(
				'MixinConfigs': 'mixins.paragon.json',
				'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
				'TweakOrder': 0,
				'FMLCorePluginContainsFMLMod': 'true',
				'FMLCorePlugin': 'com.paragon.asm.MixinLoader',
				'ForceLoadAsMod': 'true',
				'FMLAT': ''
		)
	}
}

// sourceSets { main { output.resourcesDir = output.classesDir } }